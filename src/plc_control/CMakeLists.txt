cmake_minimum_required(VERSION 3.5)
project(plc_control)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

include_directories(include)

find_package(rclcpp REQUIRED)
find_package(msg_format REQUIRED)
find_package(tcp_handle REQUIRED)

add_executable(PlcControl src/plc_control.cpp src/plc.cpp)

add_executable(PlcMain src/plc_main.cpp src/plc_node.cpp src/plc.cpp)

ament_target_dependencies(PlcControl
rclcpp msg_format tcp_handle)

ament_target_dependencies(PlcMain
rclcpp msg_format tcp_handle)

install(
  TARGETS
  PlcControl
  PlcMain
  DESTINATION lib/${PROJECT_NAME}
)

ament_package()
